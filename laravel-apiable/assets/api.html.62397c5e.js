import{_ as r,r as c,o as d,c as k,b as n,a,w as e,d as s,e as u}from"./app.f9778456.js";const m={},h=n("h1",{id:"api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#api","aria-hidden":"true"},"#"),s(" API")],-1),b=n("div",{class:"custom-container danger"},[n("p",{class:"custom-container-title"},"DANGER"),n("p",null,"This page still work in progress as we're still on pre-releases."),n("p",null,[n("strong",null,"We absolutely DON'T recommend using this on production environments yet"),s(".")])],-1),f={class:"table-of-contents"},v=s("Illuminate\\Database\\Eloquent\\Builder"),_=s("jsonApiPaginate"),g=s("Illuminate\\Support\\Collection"),x=s("toJsonApi"),A=s("OpenSoutheners\\LaravelApiable\\Contracts\\JsonApiable"),y=s("toJsonApi"),E=s("OpenSoutheners\\LaravelApiable\\Support\\Apiable"),P=s("config"),w=s("toJsonApi"),C=s("resourceTypeForModel"),j=s("getResourceType"),q=s("jsonApiRenderable"),J=s("response"),T=n("h2",{id:"illuminate-database-eloquent-builder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#illuminate-database-eloquent-builder","aria-hidden":"true"},"#"),s(" Illuminate\\Database\\Eloquent\\Builder")],-1),R=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("Please, note the "),n("strong",null,"difference between Collection and Builder coming from an Eloquent model"),s(", because that conditions the accesibility of these and other methods.")])],-1),S=n("p",null,[s("Extending the framework "),n("code",null,"Illuminate\\Database\\Eloquent\\Builder"),s(".")],-1),$=s("Source: "),I={href:"https://github.com/open-southeners/laravel-apiable/blob/7caaa1dbf4925c53ff181630eec46d9b7df2c277/src/Builder.php",target:"_blank",rel:"noopener noreferrer"},L=s("OpenSoutheners\\LaravelApiable\\Builder"),F=u(`<h3 id="jsonapipaginate" tabindex="-1"><a class="header-anchor" href="#jsonapipaginate" aria-hidden="true">#</a> jsonApiPaginate</h3><p>Transforms collection of query results of valid <code>JsonApiable</code> resources to a paginated JSON:API collection (<code>JsonApiCollection</code>).</p><p><strong>Parameters:</strong></p><table><thead><tr><th>Name</th><th>Default</th></tr></thead><tbody><tr><td>pageSize</td><td><code>null</code></td></tr><tr><td>columns</td><td><code>[&#39;*&#39;]</code></td></tr><tr><td>page</td><td><code>null</code></td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my filter&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">jsonApiPaginate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="illuminate-support-collection" tabindex="-1"><a class="header-anchor" href="#illuminate-support-collection" aria-hidden="true">#</a> Illuminate\\Support\\Collection</h2><p>Extending the framework <code>Illuminate\\Support\\Collection</code>.</p>`,8),M=s("Source: "),N={href:"https://github.com/open-southeners/laravel-apiable/blob/7caaa1dbf4925c53ff181630eec46d9b7df2c277/src/Collection.php",target:"_blank",rel:"noopener noreferrer"},O=s("OpenSoutheners\\LaravelApiable\\Collection"),D=u(`<h3 id="tojsonapi" tabindex="-1"><a class="header-anchor" href="#tojsonapi" aria-hidden="true">#</a> toJsonApi</h3><p>Transforms collection of valid <code>JsonApiable</code> resources to a JSON:API collection (<code>JsonApiCollection</code>).</p><p><strong>Note: This method doesn&#39;t paginate, for pagination take a look to the Builder::jsonApiPaginate.</strong></p><p><strong>Parameters:</strong></p><p><em>None...</em></p><p><strong>Example:</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my filter&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toJsonApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>

<span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">latest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toJsonApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="opensoutheners-laravelapiable-contracts-jsonapiable" tabindex="-1"><a class="header-anchor" href="#opensoutheners-laravelapiable-contracts-jsonapiable" aria-hidden="true">#</a> OpenSoutheners\\LaravelApiable\\Contracts\\JsonApiable</h2><p>Model contract.</p><h3 id="tojsonapi-1" tabindex="-1"><a class="header-anchor" href="#tojsonapi-1" aria-hidden="true">#</a> toJsonApi</h3><p>If the model below implements <code>OpenSoutheners\\LaravelApiable\\Contracts\\JsonApiable</code> and uses the trait <code>OpenSoutheners\\LaravelApiable\\Concerns\\HasJsonApi</code>, you could do the following to transform the model to JSON:API valid response:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">toJsonApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="opensoutheners-laravelapiable-support-apiable" tabindex="-1"><a class="header-anchor" href="#opensoutheners-laravelapiable-support-apiable" aria-hidden="true">#</a> OpenSoutheners\\LaravelApiable\\Support\\Apiable</h2><p>These methods are available as global helpers functions (see examples).</p><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> config</h3><p>Method used to get user config parameters for this specific package.</p><p><strong>Example:</strong></p>`,17),B=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"config"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'filters.default_operator'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string single-quoted-string"},"'default value here'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),G=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"config"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'filters.default_operator'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string single-quoted-string"},"'default value here'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),H=n("h3",{id:"tojsonapi-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tojsonapi-2","aria-hidden":"true"},"#"),s(" toJsonApi")],-1),V=n("p",null,"Transform passed value (can be instance of different types: Builder, Model, Collection, etc...).",-1),z=n("p",null,[n("strong",null,"Example:")],-1),W=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"toJsonApi"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token variable"},"$posts"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"toJsonApi"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$posts"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"toJsonApi"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token variable"},"$posts"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"toJsonApi"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("h3",{id:"resourcetypeformodel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resourcetypeformodel","aria-hidden":"true"},"#"),s(" resourceTypeForModel")],-1),U=n("p",null,"Guess resource type from model class or instance.",-1),X=n("p",null,[n("strong",null,"Example:")],-1),Y=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"resourceTypeForModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"resourceTypeForModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Z=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"resourceTypeForModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"resourceTypeForModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=n("h3",{id:"getresourcetype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getresourcetype","aria-hidden":"true"},"#"),s(" getResourceType")],-1),sn=n("p",null,[s("Get resource type from model class or instance (if one specified, otherwise guess it using "),n("code",null,"resourceTypeForModel"),s(" method).")],-1),an=n("p",null,[n("strong",null,"Example:")],-1),en=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getResourceType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getResourceType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token variable"},"$post"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"first"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"getResourceType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$post"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"getResourceType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Post"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),on=n("h3",{id:"jsonapirenderable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jsonapirenderable","aria-hidden":"true"},"#"),s(" jsonApiRenderable")],-1),ln=s("Render errors in a JSON:API way. "),cn=s("Check documentation on how to integrate this in your project."),pn=n("p",null,[n("strong",null,"Example:")],-1),un=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Code that might fails here..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name class-name-fully-qualified"},[n("span",{class:"token punctuation"},"\\"),s("Throwable")]),s(),n("span",{class:"token variable"},"$e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"jsonApiRenderable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$e"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),rn=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// Code that might fails here..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name class-name-fully-qualified"},[n("span",{class:"token punctuation"},"\\"),s("Throwable")]),s(),n("span",{class:"token variable"},"$e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"jsonApiRenderable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$e"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=n("h3",{id:"response",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#response","aria-hidden":"true"},"#"),s(" response")],-1),kn=s("Render content as a JSON:API serialised response. "),mn=s("Check documentation on how to customise these reponses."),hn=n("p",null,[n("strong",null,"Example:")],-1),bn=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"response"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Film"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"allowing"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token comment"},"// list of allowed user request params..."),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token class-name static-context"},"Apiable"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"response"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Film"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token comment"},"// list of allowed user request params..."),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("div",{class:"language-php ext-php line-numbers-mode"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"response"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Film"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"allowing"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token comment"},"// list of allowed user request params..."),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// or"),s(`

`),n("span",{class:"token function"},"apiable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"response"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name static-context"},"Film"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token comment"},"// list of allowed user request params..."),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function vn(_n,gn){const t=c("router-link"),p=c("ExternalLinkIcon"),o=c("CodeGroupItem"),l=c("CodeGroup"),i=c("RouterLink");return d(),k("div",null,[h,b,n("nav",f,[n("ul",null,[n("li",null,[a(t,{to:"#illuminate-database-eloquent-builder"},{default:e(()=>[v]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#jsonapipaginate"},{default:e(()=>[_]),_:1})])])]),n("li",null,[a(t,{to:"#illuminate-support-collection"},{default:e(()=>[g]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#tojsonapi"},{default:e(()=>[x]),_:1})])])]),n("li",null,[a(t,{to:"#opensoutheners-laravelapiable-contracts-jsonapiable"},{default:e(()=>[A]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#tojsonapi-1"},{default:e(()=>[y]),_:1})])])]),n("li",null,[a(t,{to:"#opensoutheners-laravelapiable-support-apiable"},{default:e(()=>[E]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#config"},{default:e(()=>[P]),_:1})]),n("li",null,[a(t,{to:"#tojsonapi-2"},{default:e(()=>[w]),_:1})]),n("li",null,[a(t,{to:"#resourcetypeformodel"},{default:e(()=>[C]),_:1})]),n("li",null,[a(t,{to:"#getresourcetype"},{default:e(()=>[j]),_:1})]),n("li",null,[a(t,{to:"#jsonapirenderable"},{default:e(()=>[q]),_:1})]),n("li",null,[a(t,{to:"#response"},{default:e(()=>[J]),_:1})])])])])]),T,R,S,n("p",null,[n("strong",null,[$,n("a",I,[L,a(p)])])]),F,n("p",null,[n("strong",null,[M,n("a",N,[O,a(p)])])]),D,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[B]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[G]),_:1})]),_:1}),H,V,z,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[W]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[K]),_:1})]),_:1}),Q,U,X,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[Y]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[Z]),_:1})]),_:1}),nn,sn,an,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[en]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[tn]),_:1})]),_:1}),on,n("p",null,[ln,n("strong",null,[a(i,{to:"/guide/README.md/#error-handling"},{default:e(()=>[cn]),_:1})])]),pn,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[un]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[rn]),_:1})]),_:1}),dn,n("p",null,[kn,n("strong",null,[a(i,{to:"/guide/responses.html"},{default:e(()=>[mn]),_:1})])]),hn,a(l,null,{default:e(()=>[a(o,{title:"FACADE"},{default:e(()=>[bn]),_:1}),a(o,{title:"HELPER"},{default:e(()=>[fn]),_:1})]),_:1})])}var An=r(m,[["render",vn],["__file","api.html.vue"]]);export{An as default};
