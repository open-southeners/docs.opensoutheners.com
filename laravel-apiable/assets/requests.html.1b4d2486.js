import{_ as u,r as p,o as r,c as k,b as s,a,w as t,d as n,e as c}from"./app.f9778456.js";const d={},m=s("h1",{id:"requests",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#requests","aria-hidden":"true"},"#"),n(" Requests")],-1),g=s("p",null,"As a new addition to this package, you can now allow your users to use:",-1),v=s("li",null,"Filters by attributes or local query scopes.",-1),b=s("li",null,"Include model relationships.",-1),h=n("Append model accessors ("),f={href:"https://laravel.com/docs/master/eloquent-serialization#appending-values-to-json",target:"_blank",rel:"noopener noreferrer"},_=n("learn more about them"),w=n(")."),y=n("Select fields from the database ("),x={href:"https://jsonapi.org/format/#fetching-sparse-fieldsets",target:"_blank",rel:"noopener noreferrer"},q=n("sparse fieldset"),A=n(")."),F=s("li",null,"Sort by attributes.",-1),S=n("Perform a fulltext search (using "),R={href:"https://laravel.com/docs/master/scout",target:"_blank",rel:"noopener noreferrer"},J=n("Laravel Scout"),I=n(")."),T=c(`<p>All of the following being conditionally allowed by you on your controllers, like the following example:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Display a listing of the resource.
 *
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">\\</span>OpenSoutheners<span class="token punctuation">\\</span>LaravelApiable<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>JsonApiCollection</span>&lt;\\App\\Models\\Post&gt;
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token class-name static-context">AllowedFilter</span><span class="token operator">::</span><span class="token function">similar</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">AllowedFilter</span><span class="token operator">::</span><span class="token function">similar</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;film.title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">AllowedFilter</span><span class="token operator">::</span><span class="token function">similar</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">AllowedSort</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">AllowedSort</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="allow-includes" tabindex="-1"><a class="header-anchor" href="#allow-includes" aria-hidden="true">#</a> Allow includes</h2><p>You can allow users to include relationships to the JSON:API response like so:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;reviews&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You may also allow nested includes like so:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author.reviews&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or even use a &quot;less-generic&quot; method like <code>allowIncludes</code>:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowInclude</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>

<span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowInclude</span><span class="token punctuation">(</span><span class="token class-name static-context">AllowedInclude</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="allow-sorts" tabindex="-1"><a class="header-anchor" href="#allow-sorts" aria-hidden="true">#</a> Allow sorts</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Remember that you can use <code>OpenSoutheners\\LaravelApiable\\Http\\SortDirection</code> enum, <strong>only if you&#39;re using PHP 8.1+</strong>.</p></div><p>You can allow your users to sort by descendant or ascendant order (or both, <strong>which is the default behaviour</strong>):</p>`,12),D=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"make"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),E=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"ascendant"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"ascendant"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string single-quoted-string"},"'asc'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or if you have PHP8.1+"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name static-context"},"SortDirection"),s("span",{class:"token operator"},"::"),s("span",{class:"token constant"},"ASCENDANT"),s("span",{class:"token operator"},"->"),s("span",{class:"token property"},"value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),N=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"descendant"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"descendant"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string single-quoted-string"},"'desc'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token comment"},"// or if you have PHP8.1+"),n(`

`),s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowSort"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name static-context"},"SortDirection"),s("span",{class:"token operator"},"::"),s("span",{class:"token constant"},"DESCENDANT"),s("span",{class:"token operator"},"->"),s("span",{class:"token property"},"value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),P=c('<h2 id="allow-filters" tabindex="-1"><a class="header-anchor" href="#allow-filters" aria-hidden="true">#</a> Allow filters</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Remember that an <code>exact</code> filter is using <code>LIKE</code> comparison at the end (on the database), while an exact is using <code>MATCH</code> (or <code>=</code>). Use them depending of your case. <strong>By default it uses <code>LIKE</code> comparison.</strong></p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Also filters automatically detects wether you have a scope or an attribute.</p></div><p>You can allow your users to filter by a model attribute or its relation&#39;s attributes:</p>',4),C=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"make"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'title'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"make"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'author.name'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),L=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"similar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'title'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"similar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'author.name'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),O=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"exact"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'title'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"exact"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'author.name'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),B=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"scoped"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'active'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),V=c(`<p>And even restrict what they can use for filter on each filter like so:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token class-name static-context">AllowedFilter</span><span class="token operator">::</span><span class="token function">similar</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;2012&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Jumaji&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name static-context">AllowedFilter</span><span class="token operator">::</span><span class="token function">exact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author.name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Rub\xE9n Robles&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Taylor Otwell&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="allow-fields-sparse-fieldset" tabindex="-1"><a class="header-anchor" href="#allow-fields-sparse-fieldset" aria-hidden="true">#</a> Allow fields (sparse fieldset)</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This part just fully complaints with JSON:API, while the <code>allowAppends</code> doesn&#39;t as it&#39;s something adapted to Laravel.</p></div><p>You can allow fields by resource type like so:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token class-name static-context">AllowedFields</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;film&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;shortDescription&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_by&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name static-context">AllowedFields</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>

<span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">allowFields</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;film&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;shortDescription&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_by&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">allowFields</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="allow-appends" tabindex="-1"><a class="header-anchor" href="#allow-appends" aria-hidden="true">#</a> Allow appends</h2><p>Same as allowing fields by resource type but this will append <a href="">Model accessors</a> after the query is done:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowing</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token class-name static-context">AllowedAppends</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;is_active&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or</span>

<span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowAppends</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;is_active&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),H={id:"allow-search",tabindex:"-1"},j=s("a",{class:"header-anchor",href:"#allow-search","aria-hidden":"true"},"#",-1),M=n(" Allow search "),Y={class:"custom-container danger"},Z=s("p",{class:"custom-container-title"},"DANGER",-1),G=n("This feature is only available for proper setup of "),K={href:"https://laravel.com/docs/master/scout#installation",target:"_blank",rel:"noopener noreferrer"},U=n("Laravel Scout"),z=n(" in your model."),Q=c(`<p>You can also allow fulltext search (by sending <code>yourapi.com/?q=search_query</code> or <code>yourapi.com/?search=search_query</code>) to users like this:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">JsonApiResponse</span><span class="token operator">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name static-context">Film</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">allowSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="include-allowed-filters-sorts-on-the-response" tabindex="-1"><a class="header-anchor" href="#include-allowed-filters-sorts-on-the-response" aria-hidden="true">#</a> Include allowed filters &amp; sorts on the response</h2><p>If you have a table or a component in the frontend that needs to know about what can be filtered or sorted by, you may want to add this to your JSON:API response:</p>`,4),X=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token class-name static-context"},"JsonApiResponse"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"from"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"Film"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"allowing"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedFilter"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"similar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'title'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token class-name static-context"},"AllowedSort"),s("span",{class:"token operator"},"::"),s("span",{class:"token function"},"ascendant"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string single-quoted-string"},"'created_at'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"includeAllowedToResponse"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token operator"},"->"),s("span",{class:"token function"},"list"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),W=s("div",{class:"language-json ext-json line-numbers-mode"},[s("pre",{class:"language-json"},[s("code",null,[s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},'"data"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"1"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"film"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"attributes"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2012"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"shortDescription"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Ratione omnis necessitatibus facere eius culpa molestiae necessitatibus non. Voluptatem saepe rerum..."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"description"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Ratione omnis necessitatibus facere eius culpa molestiae necessitatibus non. Voluptatem saepe rerum quis aliquid eum odit natus eveniet.\\n\\nFugiat at reiciendis cum repellendus. Quibusdam dolor fuga ut repudiandae necessitatibus similique. Magnam adipisci et iure consequatur deleniti in.\\n\\nHic unde odit distinctio et hic assumenda. Est et inventore at praesentium. Sapiente autem animi architecto rem. Delectus sed ratione ad incidunt ut odio ut quaerat."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"created_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2020-07-08T17:14:54.000000Z"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"updated_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2020-09-04T05:54:41.000000Z"'),n(`
      `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"film"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"attributes"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"The Lost City"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"shortDescription"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Velit eum nemo quibusdam quaerat illo magni dolorem similique. Assumenda quo laborum perspiciatis er..."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"description"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Velit eum nemo quibusdam quaerat illo magni dolorem similique. Assumenda quo laborum perspiciatis error aut ut ut.\\n\\nVel ipsam sed ratione illo. Placeat quis aut qui tempore in. Est est laudantium explicabo consequatur officiis consequatur voluptas. Sit rerum modi veniam voluptatem unde officia mollitia.\\n\\nNesciunt consequatur architecto recusandae aut quis. Perspiciatis ut magnam quidem voluptatum. Optio eaque ad nesciunt ea dignissimos eos nemo. Aut sed beatae earum quas."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"created_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2021-07-21T22:23:39.000000Z"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"updated_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2021-02-01T08:52:39.000000Z"'),n(`
      `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"3"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"film"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"attributes"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Ma"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"shortDescription"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Aut illum dolores amet aliquam amet facilis aut. Ratione nesciunt qui est voluptate. Consequatur con..."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"description"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Aut illum dolores amet aliquam amet facilis aut. Ratione nesciunt qui est voluptate. Consequatur consequatur adipisci quas sit. Ut non iste animi distinctio enim voluptatem.\\n\\nSuscipit adipisci nihil sit. Officiis accusamus ut itaque alias ipsum ullam qui. Sit quia in ea maiores ut error vel.\\n\\nEsse nesciunt similique libero fugit voluptas fugit. Necessitatibus est ut numquam molestiae nisi quis est. Eos et voluptatibus in alias exercitationem alias rem. Voluptate accusamus quia ut id."'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"created_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2021-09-21T10:51:02.000000Z"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"updated_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"2021-09-25T17:42:59.000000Z"'),n(`
      `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token property"},'"links"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token property"},'"first"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"http://localhost:8000/api/films?page%5Bnumber%5D=1"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"last"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"http://localhost:8000/api/films?page%5Bnumber%5D=1"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"prev"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token null keyword"},"null"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"next"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token null keyword"},"null"),n(`
  `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token property"},'"meta"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token property"},'"current_page"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"from"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"last_page"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"links"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
      `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"url"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token null keyword"},"null"),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"label"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"&laquo; Previous"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"active"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"false"),n(`
      `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"url"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"http://localhost:8000/api/films?page%5Bnumber%5D=1"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"label"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"1"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"active"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"true"),n(`
      `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"url"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token null keyword"},"null"),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"label"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Next &raquo;"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"active"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token boolean"},"false"),n(`
      `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"path"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"http://localhost:8000/api/films"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"per_page"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"15"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"to"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"total"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"allowed_filters"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"like"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"*"'),n(`
      `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"allowed_sorts"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"created_at"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"asc"'),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1);function $(ss,ns){const o=p("ExternalLinkIcon"),e=p("CodeGroupItem"),l=p("CodeGroup"),i=p("Badge");return r(),k("div",null,[m,g,s("ul",null,[v,b,s("li",null,[h,s("a",f,[_,a(o)]),w]),s("li",null,[y,s("a",x,[q,a(o)]),A]),F,s("li",null,[S,s("a",R,[J,a(o)]),I])]),T,a(l,null,{default:t(()=>[a(e,{title:"BOTH"},{default:t(()=>[D]),_:1}),a(e,{title:"ASCENDANT"},{default:t(()=>[E]),_:1}),a(e,{title:"DESCENDANT"},{default:t(()=>[N]),_:1})]),_:1}),P,a(l,null,{default:t(()=>[a(e,{title:"DEFAULT"},{default:t(()=>[C]),_:1}),a(e,{title:"SIMILAR"},{default:t(()=>[L]),_:1}),a(e,{title:"EXACT"},{default:t(()=>[O]),_:1}),a(e,{title:"SCOPE"},{default:t(()=>[B]),_:1})]),_:1}),V,s("h2",H,[j,M,a(i,{type:"tip",text:"1.0.0",vertical:"middle"})]),s("div",Y,[Z,s("p",null,[G,s("a",K,[U,a(o)]),z])]),Q,a(l,null,{default:t(()=>[a(e,{title:"BACKEND"},{default:t(()=>[X]),_:1}),a(e,{title:"RESPONSE"},{default:t(()=>[W]),_:1})]),_:1})])}var ts=u(d,[["render",$],["__file","requests.html.vue"]]);export{ts as default};
