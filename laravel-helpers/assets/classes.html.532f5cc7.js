import{_ as i,r as l,o as u,c as r,a as s,b as a,w as e,e as o,d as n}from"./app.ff3c52bf.js";const d={},k=o(`<h1 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h1><h2 id="class-namespace" tabindex="-1"><a class="header-anchor" href="#class-namespace" aria-hidden="true">#</a> class_namespace</h2><p>Get the base namespace of the given object or class string:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>MyAction</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>class_namespace</span><span class="token punctuation">;</span>

<span class="token function">class_namespace</span><span class="token punctuation">(</span><span class="token class-name static-context">MyAction</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;App\\Actions&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="class-implement" tabindex="-1"><a class="header-anchor" href="#class-implement" aria-hidden="true">#</a> class_implement</h2>`,5),m=n("Like "),h={href:"https://www.php.net/manual/en/function.class-implements",target:"_blank",rel:"noopener noreferrer"},v=n("class_implements"),_=n(" from PHP, but just checks if the given class implements the given interface:"),b=o(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>class_implement</span><span class="token punctuation">;</span>

<span class="token function">class_implement</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified static-context">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Arrayable</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="class-use" tabindex="-1"><a class="header-anchor" href="#class-use" aria-hidden="true">#</a> class_use</h2>`,2),g=n("Like "),f={href:"https://www.php.net/manual/en/function.class-uses",target:"_blank",rel:"noopener noreferrer"},w=n("class_uses"),y=n(" from PHP, but just checks if the given class implements the given interface:"),x=o(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>class_use</span><span class="token punctuation">;</span>

<span class="token function">class_use</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified static-context">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>HasAttributes</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="call" tabindex="-1"><a class="header-anchor" href="#call" aria-hidden="true">#</a> call</h2>`,2),C={class:"custom-container warning"},M=s("p",{class:"custom-container-title"},"WARNING",-1),A=n("This respects access, like it only access to public methods. For redirect calls from within the same class instance better use "),q={href:"https://github.com/laravel/framework/blob/b9203fca96960ef9cd8860cb4ec99d1279353a8d/src/Illuminate/Support/Traits/ForwardsCalls.php",target:"_blank",rel:"noopener noreferrer"},P=n("ForwardCalls"),L=n(" from Laravel."),H=s("p",null,"Call class string or instance (object) public method:",-1),S=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token keyword"},"namespace"),n(),s("span",{class:"token package"},"App"),s("span",{class:"token punctuation"},";"),n(`


`),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name-definition class-name"},"MyClass"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token function-definition function"},"myMethod"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword type-hint"},"string"),n(),s("span",{class:"token variable"},"$value"),s("span",{class:"token punctuation"},")"),n(`
  `),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token string double-quoted-string"},'"hello ${value}"'),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),I=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token keyword"},"use"),n(),s("span",{class:"token package"},[n("App"),s("span",{class:"token punctuation"},"\\"),n("MyClass")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"use"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token package"},[n("OpenSoutheners"),s("span",{class:"token punctuation"},"\\"),n("LaravelHelpers"),s("span",{class:"token punctuation"},"\\"),n("Classes"),s("span",{class:"token punctuation"},"\\"),n("call")]),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"MyClass"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string single-quoted-string"},"'myMethod'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token punctuation"},"["),s("span",{class:"token string single-quoted-string"},"'world'"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},'// "hello world"'),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),j=s("h2",{id:"call-static",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#call-static","aria-hidden":"true"},"#"),n(" call_static")],-1),G=s("p",null,[n("Calls "),s("strong",null,"public static methods"),n(" from class string or instance (object), this function does the same as "),s("code",null,"call"),n(" sending true as the fouth parameter:")],-1),N=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token keyword"},"namespace"),n(),s("span",{class:"token package"},"App"),s("span",{class:"token punctuation"},";"),n(`


`),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name-definition class-name"},"MyClass"),n(`
`),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"static"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token function-definition function"},"myMethod"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword type-hint"},"string"),n(),s("span",{class:"token variable"},"$value"),s("span",{class:"token punctuation"},")"),n(`
  `),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token string double-quoted-string"},'"hello ${value}"'),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),O=s("div",{class:"language-php ext-php line-numbers-mode"},[s("pre",{class:"language-php"},[s("code",null,[s("span",{class:"token keyword"},"use"),n(),s("span",{class:"token package"},[n("App"),s("span",{class:"token punctuation"},"\\"),n("MyClass")]),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token keyword"},"use"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token package"},[n("OpenSoutheners"),s("span",{class:"token punctuation"},"\\"),n("LaravelHelpers"),s("span",{class:"token punctuation"},"\\"),n("Classes"),s("span",{class:"token punctuation"},"\\"),n("call_static")]),s("span",{class:"token punctuation"},";"),n(`

`),s("span",{class:"token function"},"call_static"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name static-context"},"MyClass"),s("span",{class:"token operator"},"::"),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string single-quoted-string"},"'myMethod'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token punctuation"},"["),s("span",{class:"token string single-quoted-string"},"'world'"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},'// "hello world"'),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),E=s("h2",{id:"class-from",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#class-from","aria-hidden":"true"},"#"),n(" class_from")],-1),V=n("Get class string from an object or class string. "),$=n("Like "),B={href:"https://www.php.net/manual/en/function.get-class",target:"_blank",rel:"noopener noreferrer"},F=n("class_from"),T=n(" from PHP but this accepts objects."),D=o(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>class_from</span><span class="token punctuation">;</span>

<span class="token function">class_from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;App\\Models\\Post&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function R(W,z){const t=l("ExternalLinkIcon"),c=l("CodeGroupItem"),p=l("CodeGroup");return u(),r("div",null,[k,s("p",null,[m,s("a",h,[v,a(t)]),_]),b,s("p",null,[g,s("a",f,[w,a(t)]),y]),x,s("div",C,[M,s("p",null,[A,s("a",q,[P,a(t)]),L])]),H,a(p,null,{default:e(()=>[a(c,{title:"MyClass.php"},{default:e(()=>[S]),_:1}),a(c,{title:"call"},{default:e(()=>[I]),_:1})]),_:1}),j,G,a(p,null,{default:e(()=>[a(c,{title:"MyClass.php"},{default:e(()=>[N]),_:1}),a(c,{title:"call"},{default:e(()=>[O]),_:1})]),_:1}),E,s("p",null,[V,s("strong",null,[$,s("a",B,[F,a(t)]),T])]),D])}var K=i(d,[["render",R],["__file","classes.html.vue"]]);export{K as default};
