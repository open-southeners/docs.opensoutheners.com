import{_ as n,o as s,c as a,e}from"./app.ff3c52bf.js";const t={},p=e(`<h1 id="models" tabindex="-1"><a class="header-anchor" href="#models" aria-hidden="true">#</a> Models</h1><h2 id="model-from" tabindex="-1"><a class="header-anchor" href="#model-from" aria-hidden="true">#</a> model_from</h2><p>Get the model class string / instance from a given object / class string:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>model_from</span><span class="token punctuation">;</span>

<span class="token variable">$myPost</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token function">model_from</span><span class="token punctuation">(</span><span class="token variable">$myPost</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;App\\Models\\Post&quot;</span>
<span class="token function">model_from</span><span class="token punctuation">(</span><span class="token variable">$myPost</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// empty instance of App\\Models\\Post</span>

<span class="token comment">// Or in case you&#39;re storing your models in the app root folder or another namespace:</span>

<span class="token function">model_from</span><span class="token punctuation">(</span><span class="token variable">$myPost</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;App\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;App\\Post&quot;</span>
<span class="token function">model_from</span><span class="token punctuation">(</span><span class="token variable">$myPost</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;App\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// empty instance of App\\Post</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="is-model" tabindex="-1"><a class="header-anchor" href="#is-model" aria-hidden="true">#</a> is_model</h2><p>Check if specified class string or object is a Laravel model:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>is_model</span><span class="token punctuation">;</span>

<span class="token function">is_model</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="instance-from" tabindex="-1"><a class="header-anchor" href="#instance-from" aria-hidden="true">#</a> instance_from</h2><p>Get instance from given model key (id) or object (if already a model instance).</p><p><strong>If not found, will throw ModelNotFoundException.</strong></p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>instance_from</span><span class="token punctuation">;</span>

<span class="token function">instance_from</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// instance of &quot;App\\Models\\Post&quot; from database</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="key-from" tabindex="-1"><a class="header-anchor" href="#key-from" aria-hidden="true">#</a> key_from</h2><p>Get key (id) from given model key (id) or object (model instance):</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>key_from</span><span class="token punctuation">;</span>

<span class="token function">key_from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="query-from" tabindex="-1"><a class="header-anchor" href="#query-from" aria-hidden="true">#</a> query_from</h2><p>Get new query instance from model class string or instance:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token keyword">function</span> <span class="token package">OpenSoutheners<span class="token punctuation">\\</span>LaravelHelpers<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>query_from</span><span class="token punctuation">;</span>

<span class="token function">query_from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// new instance of &quot;Illuminate\\Database\\Eloquent\\Builder&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[p];function c(l,i){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","models.html.vue"]]);export{r as default};
